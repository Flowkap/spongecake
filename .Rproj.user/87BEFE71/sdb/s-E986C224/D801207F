{
    "collab_server" : "",
    "contents" : "# -*- coding: utf-8 -*-\n#' @encoding UTF-8\n#' @title average_color\n#' @description return the average color from an image\n#' @param img the image (a array)\n#' @importFrom grDevices rgb\n#' @export\n\n\naverage_color <- function(img) {\n  if (is.null(dim(img))) {\n    val <- img\n\n  } else {\n    val <- colMeans(img, dims = 2)\n\n  }\n  list(rgb = val, html = rgb(val[1], val[2], val[3]))\n}\n\n\n# -*- coding: utf-8 -*-\n#' @encoding UTF-8\n#' @title folder_average_color\n#' @description return the average color from all folder's images\n#' @param folder the path of the folder\n#' @importFrom jpeg readJPEG\n#' @importFrom magrittr %>%\n#' @export\n\n\nfolder_average_color <- function(folder){\n\n  list.files(folder,pattern = \"*.jpeg$\",full.names = TRUE) %>%\n    # magrittr::extract(1:3) %>%\n    lapply(.,FUN=readJPEG) %>%\n    lapply(.,FUN=average_color) %>%\n    lapply(.,FUN=function(x){x$html}) %>%\n    unlist()\n}\n\n# -*- coding: utf-8 -*-\n#' @encoding UTF-8\n#' @title gen_screenshot\n#' @description transform a movie into lot of screenshot\n#' @param movie the path of the movie\n#' @param folder the path of the folder\n#' @param every timbe between each screenshot in seconds\n#' @examples\n#' \\dontrun{\n#' gen_screenshot(movie = \"D:/mymovie.avi\") %>%\n#' browseURL()\n#' }\n#' @export\n\n\ngen_screenshot <- function(movie,folder=tempfile(),every=30,stdout=\"\"){\n  try(dir.create(folder))\ncat(folder,\"\\n\\n\\n\")\n    td <- paste0(options()$ffmpeg,\" -i \",movie,\" -vf fps=1/\",every,\"  \",folder,\"/image-%04d.jpeg\")\n  td\ncat(system.time(system(td,stdout=stdout)))\nreturn(folder)\n}\n\n\n\n# -*- coding: utf-8 -*-\n#' @encoding UTF-8\n#' @title draw\n#' @description transform a folder of scrennshot into a synthetical picture\n#' @param folder the path of the folder\n#' @importFrom ggplot2 ggplot aes geom_bar coord_flip theme_void\n#' @examples\n#' \\dontrun{\n#' #options(ffmpeg = \"C:/ffmpeg-3.1.4-win64-static/bin/ffmpeg.exe\") # windows user\n#' library(magrittr)\n#' gen_screenshot(movie = \"D:/mymovie.avi\") %>%\n#' draw()\n#' }\n#' @export\n\n\n\ndraw <- function(folder){\n  jj <- folder_average_color(folder)\n  data.frame(trt = jj, outcome = rep(1,length(jj))) %>%\n    ggplot(., aes(trt, outcome)) +\n    geom_bar(stat = \"identity\", position = \"fill\",fill=jj,width=1)+\n    coord_flip()+ theme_void()\n}\n",
    "created" : 1476633941811.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "285854961",
    "id" : "D801207F",
    "lastKnownWriteTime" : 1476637016,
    "last_content_update" : 1476637014523,
    "path" : "D:/ThinkR/package public/spongecake/R/functions.R",
    "project_path" : "R/functions.R",
    "properties" : {
        "chunk_rendered_width" : "650"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}